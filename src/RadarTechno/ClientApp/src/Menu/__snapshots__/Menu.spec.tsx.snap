// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu component test Menu component with user matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MemoryRouter
    initialEntries={
      Array [
        "/",
      ]
    }
    keyLength={0}
  >
    <Menu
      handleClick={[Function]}
      isMenuVisible={true}
      position={0}
      updatePosition={null}
      user={
        Object {
          "email": "email",
          "entity": Object {
            "adminList": Array [
              "Test@axa.fr",
            ],
            "id": "5a4e2821a111b016c4cc5804",
            "name": "AXA France",
            "technologies": null,
            "version": 0,
            "workflowUrl": "url",
          },
          "id": "id",
          "role": "root",
          "token": "token",
        }
      }
    />
  </MemoryRouter>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Menu
        handleClick={[Function]}
        isMenuVisible={true}
        position={0}
        updatePosition={null}
        user={
          Object {
            "email": "email",
            "entity": Object {
              "adminList": Array [
                "Test@axa.fr",
              ],
              "id": "5a4e2821a111b016c4cc5804",
              "name": "AXA France",
              "technologies": null,
              "version": 0,
              "workflowUrl": "url",
            },
            "id": "id",
            "role": "root",
            "token": "token",
          }
        }
      />,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "handleClick": [Function],
        "isMenuVisible": true,
        "position": 0,
        "updatePosition": null,
        "user": Object {
          "email": "email",
          "entity": Object {
            "adminList": Array [
              "Test@axa.fr",
            ],
            "id": "5a4e2821a111b016c4cc5804",
            "name": "AXA France",
            "technologies": null,
            "version": 0,
            "workflowUrl": "url",
          },
          "id": "id",
          "role": "root",
          "token": "token",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Menu
          handleClick={[Function]}
          isMenuVisible={true}
          position={0}
          updatePosition={null}
          user={
            Object {
              "email": "email",
              "entity": Object {
                "adminList": Array [
                  "Test@axa.fr",
                ],
                "id": "5a4e2821a111b016c4cc5804",
                "name": "AXA France",
                "technologies": null,
                "version": 0,
                "workflowUrl": "url",
              },
              "id": "id",
              "role": "root",
              "token": "token",
            }
          }
        />,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleClick": [Function],
          "isMenuVisible": true,
          "position": 0,
          "updatePosition": null,
          "user": Object {
            "email": "email",
            "entity": Object {
              "adminList": Array [
                "Test@axa.fr",
              ],
              "id": "5a4e2821a111b016c4cc5804",
              "name": "AXA France",
              "technologies": null,
              "version": 0,
              "workflowUrl": "url",
            },
            "id": "id",
            "role": "root",
            "token": "token",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Menu component test Menu component without user matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MemoryRouter
    initialEntries={
      Array [
        "/",
      ]
    }
    keyLength={0}
  >
    <Menu
      handleClick={[Function]}
      hideMenuButton={true}
      isMenuVisible={true}
      position={0}
      updatePosition={null}
      user={null}
    />
  </MemoryRouter>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Menu
        handleClick={[Function]}
        hideMenuButton={true}
        isMenuVisible={true}
        position={0}
        updatePosition={null}
        user={null}
      />,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "handleClick": [Function],
        "hideMenuButton": true,
        "isMenuVisible": true,
        "position": 0,
        "updatePosition": null,
        "user": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Menu
          handleClick={[Function]}
          hideMenuButton={true}
          isMenuVisible={true}
          position={0}
          updatePosition={null}
          user={null}
        />,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleClick": [Function],
          "hideMenuButton": true,
          "isMenuVisible": true,
          "position": 0,
          "updatePosition": null,
          "user": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
